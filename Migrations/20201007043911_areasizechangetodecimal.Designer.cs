// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThaniyasFarmerAppAPI.Repository;

namespace ThaniyasFarmerAppAPI.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20201007043911_areasizechangetodecimal")]
    partial class areasizechangetodecimal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Configuration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentID");

                    b.Property<string>("Text");

                    b.Property<string>("Type");

                    b.Property<string>("Value");

                    b.HasKey("ID");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(7872),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(7873),
                            Deleted = false,
                            Name = "UserID",
                            Type = "SystemEmailSettings",
                            Value = "vNp/Rg/59Wq/aUZBS0+1LDWmAArWOdzzJByWFcSqj9c="
                        },
                        new
                        {
                            ID = 2,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(66),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(66),
                            Deleted = false,
                            Name = "Password",
                            Type = "SystemEmailSettings",
                            Value = "DR7VkCQllyJBLRHqnhoFLg=="
                        },
                        new
                        {
                            ID = 3,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(794),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(794),
                            Deleted = false,
                            Name = "SMTPPort",
                            Type = "SystemEmailSettings",
                            Value = "KfPgC+VOAFLCwNmgAKPmfQ=="
                        },
                        new
                        {
                            ID = 4,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(1438),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(1438),
                            Deleted = false,
                            Name = "Host",
                            Type = "SystemEmailSettings",
                            Value = "+fNJD/SKxu6Pyz64X9mIMQ=="
                        });
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.GoogleRegister", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<int>("UserId");

                    b.Property<string>("accessToken");

                    b.Property<string>("email");

                    b.Property<string>("familyName");

                    b.Property<string>("givenName");

                    b.Property<string>("googleid");

                    b.Property<string>("idToken");

                    b.Property<string>("imageUrl");

                    b.Property<string>("name");

                    b.Property<string>("serverAuthCode");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("GoogleRegisters");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Harvestings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<int>("LabourCost");

                    b.Property<string>("NoOfLabours")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int>("PartitionLandDetailId");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("PartitionLandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Harvestings");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.LandDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaSize");

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<string>("PattaNumber")
                        .HasMaxLength(50);

                    b.Property<int>("StateId");

                    b.Property<string>("SurveyNumber")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.Property<string>("Village")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("StateId");

                    b.HasIndex("UserId");

                    b.ToTable("LandDetails");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaSize")
                        .HasMaxLength(75);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<int>("LandDetailId");

                    b.Property<string>("LandDirection")
                        .IsRequired()
                        .HasMaxLength(75);

                    b.Property<string>("Notes");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("LandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("PartitionLandDetails");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.PestControl", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<string>("LabourCost")
                        .HasMaxLength(50);

                    b.Property<string>("NameofthePestSide")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int>("PartitionLandDetailId");

                    b.Property<DateTime>("PestControlDate");

                    b.Property<string>("Purpose")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("PartitionLandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("PestControls");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Plowing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int>("PartitionLandDetailId");

                    b.Property<DateTime>("PlowingDate");

                    b.Property<string>("PlowingExp")
                        .HasMaxLength(50);

                    b.Property<string>("TypeofPlowing")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("PartitionLandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Plowings");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.RolePageAccess", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<int>("PagesID");

                    b.Property<int>("RolesID");

                    b.HasKey("ID");

                    b.HasIndex("PagesID");

                    b.HasIndex("RolesID");

                    b.ToTable("RolePageAccesses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(8728),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(8728),
                            Deleted = false,
                            PagesID = 1,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 2,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9426),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9426),
                            Deleted = false,
                            PagesID = 2,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 3,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9432),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9432),
                            Deleted = false,
                            PagesID = 3,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 4,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9433),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9433),
                            Deleted = false,
                            PagesID = 4,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 5,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9434),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9434),
                            Deleted = false,
                            PagesID = 5,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 6,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9434),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9435),
                            Deleted = false,
                            PagesID = 6,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 7,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9435),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9435),
                            Deleted = false,
                            PagesID = 7,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 8,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9436),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9436),
                            Deleted = false,
                            PagesID = 8,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 9,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9437),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9437),
                            Deleted = false,
                            PagesID = 9,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 10,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9438),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9438),
                            Deleted = false,
                            PagesID = 10,
                            RolesID = 1
                        },
                        new
                        {
                            ID = 11,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9438),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9439),
                            Deleted = false,
                            PagesID = 1,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 12,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9439),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9439),
                            Deleted = false,
                            PagesID = 2,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 13,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9440),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9440),
                            Deleted = false,
                            PagesID = 3,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 14,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9441),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9441),
                            Deleted = false,
                            PagesID = 4,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 15,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9441),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9442),
                            Deleted = false,
                            PagesID = 5,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 16,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9442),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9442),
                            Deleted = false,
                            PagesID = 6,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 17,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9443),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9443),
                            Deleted = false,
                            PagesID = 7,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 18,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9444),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9444),
                            Deleted = false,
                            PagesID = 8,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 19,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9444),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9445),
                            Deleted = false,
                            PagesID = 9,
                            RolesID = 2
                        },
                        new
                        {
                            ID = 20,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9445),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 880, DateTimeKind.Utc).AddTicks(9445),
                            Deleted = false,
                            PagesID = 10,
                            RolesID = 2
                        });
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Deleted = false,
                            Name = "Admin",
                            Text = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            Deleted = false,
                            Name = "User",
                            Text = "User"
                        },
                        new
                        {
                            ID = 3,
                            Deleted = false,
                            Name = "SiteAdmin",
                            Text = "Admin"
                        });
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Sale", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerMobileNumber")
                        .HasMaxLength(50);

                    b.Property<string>("BuyerName")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int>("PartitionLandDetailId");

                    b.Property<string>("Price")
                        .HasMaxLength(50);

                    b.Property<string>("Quantity")
                        .HasMaxLength(50);

                    b.Property<DateTime>("SaleDate");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("PartitionLandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Seeding", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<int>("LabourCost");

                    b.Property<string>("NoOfLabours")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int>("PartitionLandDetailId");

                    b.Property<string>("Quantity")
                        .HasMaxLength(50);

                    b.Property<string>("SeedCost");

                    b.Property<string>("SeedName")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("PartitionLandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("Seedings");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.StateList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StateName");

                    b.HasKey("ID");

                    b.ToTable("StateLists");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            StateName = "Tamilnadu"
                        },
                        new
                        {
                            ID = 2,
                            StateName = "Kerala"
                        },
                        new
                        {
                            ID = 3,
                            StateName = "Karnataka"
                        });
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptedTermsAndConditions");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<bool>("IsFirstTimeLogin");

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ResetPasswordToken");

                    b.Property<int>("RoleID");

                    b.Property<string>("Source");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AcceptedTermsAndConditions = false,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(1738),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(1749),
                            Deleted = false,
                            Email = "winedjos@gmail.com",
                            IsFirstTimeLogin = true,
                            Password = "llFg1YwNHgLVbQGDz1aaEQ==",
                            RoleID = 0,
                            UserName = "admin"
                        },
                        new
                        {
                            ID = 2,
                            AcceptedTermsAndConditions = true,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(3089),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(3090),
                            Deleted = false,
                            Email = "seenu@inisys.in",
                            IsFirstTimeLogin = true,
                            Password = "llFg1YwNHgLVbQGDz1aaEQ==",
                            RoleID = 1,
                            UserName = "seenu"
                        },
                        new
                        {
                            ID = 3,
                            AcceptedTermsAndConditions = true,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(4358),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(4359),
                            Deleted = false,
                            Email = "senthil@gmail.com",
                            IsFirstTimeLogin = true,
                            Password = "llFg1YwNHgLVbQGDz1aaEQ==",
                            RoleID = 1,
                            UserName = "senthil"
                        },
                        new
                        {
                            ID = 4,
                            AcceptedTermsAndConditions = true,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(5015),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(5016),
                            Deleted = false,
                            Email = "seetha@inisys.in",
                            IsFirstTimeLogin = true,
                            Password = "llFg1YwNHgLVbQGDz1aaEQ==",
                            RoleID = 1,
                            UserName = "seetha"
                        },
                        new
                        {
                            ID = 5,
                            AcceptedTermsAndConditions = true,
                            DateAdded = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(5640),
                            DateModified = new DateTime(2020, 10, 7, 4, 39, 10, 879, DateTimeKind.Utc).AddTicks(5641),
                            Deleted = false,
                            Email = "edwin@inisys.in",
                            IsFirstTimeLogin = true,
                            Password = "llFg1YwNHgLVbQGDz1aaEQ==",
                            RoleID = 1,
                            UserName = "edwin"
                        });
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.UserActivity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("TimeStamp");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserActivity");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.WebPages", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.Property<string>("Url");

                    b.HasKey("ID");

                    b.ToTable("WebPages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Deleted = false,
                            Name = "ManageLand",
                            Text = "Land",
                            Url = "/manageland"
                        },
                        new
                        {
                            ID = 2,
                            Deleted = false,
                            Name = "ManagePartition",
                            Text = "Partition",
                            Url = "/managepartition"
                        },
                        new
                        {
                            ID = 3,
                            Deleted = false,
                            Name = "Plowing",
                            Text = "Plowing ",
                            Url = "/plowing "
                        },
                        new
                        {
                            ID = 4,
                            Deleted = false,
                            Name = "Seeding",
                            Text = "Seeding",
                            Url = "/seeding"
                        },
                        new
                        {
                            ID = 5,
                            Deleted = false,
                            Name = "PestControl",
                            Text = "Pest Control",
                            Url = "/pestcontrol"
                        },
                        new
                        {
                            ID = 6,
                            Deleted = false,
                            Name = "WeedRemove",
                            Text = "Weed Remove",
                            Url = "/weedremove"
                        },
                        new
                        {
                            ID = 7,
                            Deleted = false,
                            Name = "PostLogin",
                            Text = "Post Login",
                            Url = "/postlogin"
                        },
                        new
                        {
                            ID = 8,
                            Deleted = false,
                            Name = "Harvesting",
                            Text = "Harvesting",
                            Url = "/harvesting"
                        },
                        new
                        {
                            ID = 9,
                            Deleted = false,
                            Name = "Sale",
                            Text = "Sale",
                            Url = "/sale"
                        },
                        new
                        {
                            ID = 10,
                            Deleted = false,
                            Name = "Report",
                            Text = "Report",
                            Url = "/report"
                        });
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.WeedRemove", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cost")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DateAdded");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool>("Deleted");

                    b.Property<int>("LabourCost");

                    b.Property<string>("NoOfLabours")
                        .HasMaxLength(50);

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<int>("PartitionLandDetailId");

                    b.Property<int>("UserId");

                    b.HasKey("ID");

                    b.HasIndex("PartitionLandDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("WeedRemove");
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.GoogleRegister", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Harvestings", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", "PartitionLandDetail")
                        .WithMany("Harvestings")
                        .HasForeignKey("PartitionLandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.LandDetail", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.StateList", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.LandDetail", "LandDetail")
                        .WithMany("PartitionLandDetails")
                        .HasForeignKey("LandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.PestControl", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", "PartitionLandDetail")
                        .WithMany("PestControls")
                        .HasForeignKey("PartitionLandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Plowing", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", "PartitionLandDetail")
                        .WithMany("Plowings")
                        .HasForeignKey("PartitionLandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.RolePageAccess", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.WebPages", "Pages")
                        .WithMany()
                        .HasForeignKey("PagesID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("RolesID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Sale", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", "PartitionLandDetail")
                        .WithMany("Sales")
                        .HasForeignKey("PartitionLandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.Seeding", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", "PartitionLandDetail")
                        .WithMany("Seedings")
                        .HasForeignKey("PartitionLandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.UserActivity", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ThaniyasFarmerAppAPI.Models.WeedRemove", b =>
                {
                    b.HasOne("ThaniyasFarmerAppAPI.Models.PartitionLandDetail", "PartitionLandDetail")
                        .WithMany("WeedRemoves")
                        .HasForeignKey("PartitionLandDetailId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ThaniyasFarmerAppAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
